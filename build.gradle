plugins {
    id 'application'
}

application {
    mainClass = 'Main'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
}

run {
    standardInput = System.in
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    testImplementation 'org.mockito:mockito-core:5.11.0'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': 'Main'
    }
    archiveBaseName = 'client04'
}

tasks.register('copyToBin', Copy) {
    dependsOn jar
    from 'build/libs'
    into 'bin'
    include '*.jar'
}

tasks.register('deleteBin', Delete){
    delete 'bin'
}

jar.finalizedBy('copyToBin')
clean.finalizedBy('deleteBin')


tasks.register('cleanOldLogFiles', Delete) {
    def logFiles = file('.').listFiles().findAll { it.isFile() && it.name.startsWith('log_game_') }

    logFiles.sort { it.lastModified() }

    def keepCount = 20
    def filesToDelete = logFiles.drop(keepCount)

    filesToDelete.each { file ->
        delete file
        println("Deleted old log file: ${file.name}")
    }
}

testClasses.finalizedBy('cleanOldLogFiles')